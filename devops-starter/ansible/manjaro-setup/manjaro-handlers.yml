---
- name: Change shell to zsh
  command: chsh -s /usr/bin/zsh
  become: yes
  when: zsh is success

- name: Add nvm to path
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    state: present
    line: export NVM_DIR="{{ ansible_env.HOME }}/.nvm"

- name: Load nvm
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    state: present
    line: '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"'

- name: Load bash completion
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    state: present
    line: '[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"'

- name: Set zsh theme
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    state: present
    regexp: "^ZSH_THEME=.*"
    line: 'ZSH_THEME="ys"'

- name: Setup git configurations
  command: "git config --global {{ item }}"
  with_items:
    - user.name "{{ github_user }}"
    - user.email "{{ github_email }}"
    - color.ui auto
    - color.branch auto
    - color.diff auto
    - color.status auto
  when:
    - github_user != None
    - github_email != None

- name: Create git log alias
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    state: present
    line: 'alias glog="git log --graph --all --pretty=format:''%C(blue)%h %C(red)%d %Creset - %C(yellow)%s%Creset %C(green)(%cr)%Creset <%aN>''"'

- name: Generate rsa keys
  command: ssh-keygen -t ed25519 -C '{{ github_email }}' -f "{{ ansible_env.HOME }}/.ssh/id_rsa"
  args:
    creates: "{{ ansible_env.HOME }}/.ssh/id_rsa"
  when:
    - github_email != None

- name: Create golang root extraction folder
  ansible.builtin.file:
    path: "{{ golang_root_path }}"
    state: directory
    mode: "0755"
  listen: Golang post installation setup

- name: Create golang package folder
  ansible.builtin.file:
    path: "{{ golang_app_path }}"
    state: directory
    mode: "0755"
  listen: Golang post installation setup

- name: Extract golang
  unarchive:
    src: "{{ ansible_env.HOME }}/Downloads/golang.tar.gz"
    dest: "{{ golang_root_path }}"
  listen: Golang post installation setup

- name: Add go root bin to path
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    state: present
    line: "export PATH=$PATH:{{ golang_root_path }}/bin"
  listen: Golang post installation setup

- name: Export golang GOPATH
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    state: present
    line: "export GOPATH={{ golang_app_path }}"
  listen: Golang post installation setup

- name: Export golang GOBIN
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    state: present
    line: "export GOBIN={{ golang_app_path }}/bin"
  listen: Golang post installation setup

- name: Add GOBIN to PATH
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    state: present
    line: "export PATH=$PATH:$GOBIN"
  listen: Golang post installation setup

- name: Remove golang tgz
  file:
    path: "{{ ansible_env.HOME }}/Downloads/golang.tar.gz"
    state: absent
  listen: Golang post installation setup

- name: Add user to docker group
  user:
    name: "{{ ansible_env.USER }}"
    groups: docker
    append: yes
  become: yes

- name: Enable apparmor service
  ansible.builtin.systemd_service:
    state: started
    name: apparmor
  become: yes
  when: apparmor is success


- name: Setup tlp config
  become: yes
  copy:
    dest: "{{ tlp_config_path }}"
    content: |
      ## -- Start custom config
      ## Mostly firmware related. Check docs for more info

      ## On battery related settings
      # Start charging at level below this threshold
      START_CHARGE_THRESH_BAT0=26

      # Stop charging at threshold level or greater
      STOP_CHARGE_THRESH_BAT0=81

      # Enable platform profile
      PLATFORM_PROFILE_ON_BAT=balance_power

      # Disable turbo boost
      CPU_BOOST_ON_BAT=0

      ## On ac related settings
      # Set CPU energy/performance policies
      CPU_ENERGY_PERF_POLICY_ON_AC=balance_performance

      # Enable platform profile
      PLATFORM_PROFILE_ON_AC=balance_performance

      # Controls runtime power management for PCIe devices
      RUNTIME_PM_ON_AC=auto

      # Enable turbo boost
      CPU_BOOST_ON_AC=1
      
      ## -- Start custom config
  when: tlp is success
